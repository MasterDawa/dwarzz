{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHome\\\\dwarzz\\\\src\\\\components\\\\DrugMarket.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { updateMoney, updateInventory, updateBTC } from '../store/playerSlice';\nimport { addMessage } from '../store/gameSlice';\nimport { updateQuestProgress } from '../store/questSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketContainer = styled.div`\n  background: rgba(20, 20, 20, 0.75);\n  border-radius: 8px;\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n`;\n_c = MarketContainer;\nconst MarketTitle = styled.h3`\n  color: var(--color-primary);\n  margin-bottom: 0.8rem;\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\n  padding-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1.1rem;\n`;\n_c2 = MarketTitle;\nconst TabContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n_c3 = TabContainer;\nconst Tab = styled.button`\n  padding: 0.5rem 1rem;\n  background: ${props => props.active ? 'var(--color-primary)' : 'rgba(30, 30, 30, 0.75)'};\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  color: ${props => props.active ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${props => props.active ? 'var(--color-primary)' : 'rgba(40, 40, 40, 0.75)'};\n  }\n`;\n_c4 = Tab;\nconst DrugGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));\n  gap: 1rem;\n  overflow-y: auto;\n  flex: 1;\n  padding-right: 5px;\n  min-height: 0;\n`;\n_c5 = DrugGrid;\nconst ToolGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n  overflow-y: auto;\n  flex: 1;\n  padding-right: 5px;\n  min-height: 0;\n`;\n_c6 = ToolGrid;\nconst ToolCard = styled.div`\n  background: rgba(30, 30, 30, 0.75);\n  border-radius: 6px;\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n_c7 = ToolCard;\nconst ToolName = styled.div`\n  font-weight: bold;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n  color: white;\n`;\n_c8 = ToolName;\nconst ToolDescription = styled.div`\n  font-size: 0.9rem;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 0.8rem;\n`;\n_c9 = ToolDescription;\nconst ToolPrice = styled.div`\n  font-size: 1.1rem;\n  margin-bottom: 0.8rem;\n  color: var(--color-success);\n`;\n_c10 = ToolPrice;\nconst ToolButton = styled.button`\n  width: 100%;\n  background-color: var(--color-primary);\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  \n  &:disabled {\n    background-color: rgba(50, 50, 50, 0.5);\n  }\n`;\n_c11 = ToolButton;\nconst DrugCard = styled.div`\n  background: rgba(30, 30, 30, 0.75);\n  border-radius: 6px;\n  padding: 0.8rem;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n`;\n_c12 = DrugCard;\nconst DrugName = styled.div`\n  font-weight: bold;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n  color: white;\n`;\n_c13 = DrugName;\nconst DrugPrice = styled.div`\n  font-size: 1.1rem;\n  margin-bottom: 0.4rem;\n  color: ${props => props.color || 'white'};\n`;\n_c14 = DrugPrice;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n`;\n_c15 = ButtonGroup;\nconst ActionButton = styled.button`\n  flex: 1;\n  background-color: ${props => props.action === 'buy' ? 'var(--color-success)' : 'var(--color-danger)'};\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  \n  &:disabled {\n    background-color: rgba(50, 50, 50, 0.5);\n  }\n`;\n_c16 = ActionButton;\nconst AmountControl = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 0.5rem;\n`;\n_c17 = AmountControl;\nconst AmountButton = styled.button`\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(50, 50, 50, 0.8);\n`;\n_c18 = AmountButton;\nconst AmountInput = styled.input`\n  width: 50px;\n  padding: 0.3rem;\n  text-align: center;\n  background-color: rgba(30, 30, 30, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  margin: 0 0.3rem;\n`;\n_c19 = AmountInput;\nconst DrugMarket = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    money = 0,\n    inventory = {},\n    currentLocation = 'manhattan',\n    btc = 0\n  } = useSelector(state => state.player);\n  const {\n    prices = {}\n  } = useSelector(state => state.game);\n  const {\n    quests = {},\n    activeQuestIds = []\n  } = useSelector(state => state.quests);\n  const [activeTab, setActiveTab] = useState('drugs');\n  const [amounts, setAmounts] = useState({\n    weed: 1,\n    cocaine: 1,\n    heroin: 1,\n    meth: 1,\n    ecstasy: 1\n  });\n\n  // Format drug name for display\n  const formatDrugName = drug => {\n    return drug.charAt(0).toUpperCase() + drug.slice(1);\n  };\n\n  // Location prices with fallback\n  const locationPrices = prices[currentLocation] || {\n    weed: 50,\n    cocaine: 200,\n    heroin: 300,\n    meth: 120,\n    ecstasy: 80\n  };\n\n  // Change amount for drug\n  const changeAmount = (drug, value) => {\n    setAmounts(prev => ({\n      ...prev,\n      [drug]: Math.max(1, value)\n    }));\n  };\n\n  // Buy drugs\n  const buyDrug = (drug, amount) => {\n    const price = locationPrices[drug];\n    if (!price) {\n      dispatch(addMessage(`Error: No price available for ${drug}.`));\n      return;\n    }\n    const cost = price * amount;\n    if (money < cost) {\n      dispatch(addMessage(`You don't have enough money to buy ${amount} ${drug}.`));\n      return;\n    }\n\n    // Update money and inventory\n    dispatch(updateMoney(-cost));\n    dispatch(updateInventory({\n      drug,\n      amount\n    }));\n    dispatch(addMessage(`Bought ${amount} ${drug} for $${cost.toLocaleString()}.`));\n\n    // Check for active quests related to buying this drug\n    activeQuestIds.forEach(questId => {\n      const quest = quests[questId];\n      if (!quest) return;\n      if (quest.requirement.type === 'purchase' && (quest.requirement.drug === drug || quest.requirement.drug === 'any') && (quest.requirement.location === currentLocation || quest.requirement.location === 'any')) {\n        // Update quest progress\n        const newProgress = quest.progress + amount;\n        dispatch(updateQuestProgress({\n          questId,\n          progress: newProgress\n        }));\n\n        // Check if completed\n        if (newProgress >= quest.requirement.amount && !quest.completed) {\n          // Apply rewards\n          if (quest.reward.money) {\n            dispatch(updateMoney(quest.reward.money));\n          }\n          if (quest.reward.reputation) {\n            dispatch({\n              type: 'player/updateReputation',\n              payload: quest.reward.reputation\n            });\n          }\n          if (quest.reward.levelUp) {\n            dispatch({\n              type: 'player/levelUp'\n            });\n          }\n          dispatch(addMessage(`Quest Completed: ${quest.title}! You earned $${quest.reward.money} and leveled up.`));\n        }\n      }\n    });\n  };\n\n  // Sell drugs\n  const sellDrug = (drug, amount) => {\n    if (!inventory[drug] || inventory[drug] < amount) {\n      dispatch(addMessage(`You don't have enough ${drug} to sell.`));\n      return;\n    }\n    const price = locationPrices[drug];\n    if (!price) {\n      dispatch(addMessage(`Error: No price available for ${drug}.`));\n      return;\n    }\n    const profit = price * amount;\n\n    // Update money and inventory\n    dispatch(updateMoney(profit));\n    dispatch(updateInventory({\n      drug,\n      amount: -amount\n    }));\n    dispatch(addMessage(`Sold ${amount} ${drug} for $${profit.toLocaleString()}.`));\n\n    // Check for active quests related to selling this drug\n    activeQuestIds.forEach(questId => {\n      const quest = quests[questId];\n      if (!quest) return;\n      if (quest.requirement.type === 'sell' && (quest.requirement.drug === drug || quest.requirement.drug === 'any') && (quest.requirement.location === currentLocation || quest.requirement.location === 'any')) {\n        // Update quest progress\n        const newProgress = quest.progress + amount;\n        dispatch(updateQuestProgress({\n          questId,\n          progress: newProgress\n        }));\n\n        // Check if completed\n        if (newProgress >= quest.requirement.amount && !quest.completed) {\n          // Apply rewards\n          if (quest.reward.money) {\n            dispatch(updateMoney(quest.reward.money));\n          }\n          if (quest.reward.reputation) {\n            dispatch({\n              type: 'player/updateReputation',\n              payload: quest.reward.reputation\n            });\n          }\n          if (quest.reward.levelUp) {\n            dispatch({\n              type: 'player/levelUp'\n            });\n          }\n          dispatch(addMessage(`Quest Completed: ${quest.title}! You earned $${quest.reward.money} and leveled up.`));\n        }\n      }\n    });\n  };\n\n  // Tool functions\n  const tools = [{\n    id: 'miningRig',\n    name: 'Basic Mining Rig',\n    description: 'Set up a basic Bitcoin mining operation',\n    price: 5000,\n    btcPerDay: 0.01,\n    action: () => {\n      if (money < 5000) {\n        dispatch(addMessage(\"You don't have enough money to buy a mining rig.\"));\n        return;\n      }\n      dispatch(updateMoney(-5000));\n      dispatch(updateBTC(0.01));\n      dispatch(addMessage(\"You've set up a basic mining rig. Generating 0.01 BTC per day.\"));\n    }\n  }, {\n    id: 'advancedRig',\n    name: 'Advanced Mining Rig',\n    description: 'Upgrade to a more powerful mining setup',\n    price: 15000,\n    btcPerDay: 0.05,\n    action: () => {\n      if (money < 15000) {\n        dispatch(addMessage(\"You don't have enough money to buy an advanced mining rig.\"));\n        return;\n      }\n      dispatch(updateMoney(-15000));\n      dispatch(updateBTC(0.05));\n      dispatch(addMessage(\"You've upgraded to an advanced mining rig. Generating 0.05 BTC per day.\"));\n    }\n  }, {\n    id: 'cryptoWallet',\n    name: 'Secure Crypto Wallet',\n    description: 'Store your Bitcoin safely',\n    price: 1000,\n    action: () => {\n      if (money < 1000) {\n        dispatch(addMessage(\"You don't have enough money to buy a secure wallet.\"));\n        return;\n      }\n      dispatch(updateMoney(-1000));\n      dispatch(addMessage(\"You've purchased a secure crypto wallet.\"));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(MarketContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MarketTitle, {\n      children: [activeTab === 'drugs' ? 'Drug Market' : 'Tools', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Cash: $\", money.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'drugs',\n        onClick: () => setActiveTab('drugs'),\n        children: \"Drugs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'tools',\n        onClick: () => setActiveTab('tools'),\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), activeTab === 'drugs' ? /*#__PURE__*/_jsxDEV(DrugGrid, {\n      children: Object.entries(locationPrices).map(([drug, price]) => /*#__PURE__*/_jsxDEV(DrugCard, {\n        children: [/*#__PURE__*/_jsxDEV(DrugName, {\n          children: formatDrugName(drug)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DrugPrice, {\n          color: \"var(--color-success)\",\n          children: [\"$\", price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"In stock: \", inventory[drug] || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AmountControl, {\n          children: [/*#__PURE__*/_jsxDEV(AmountButton, {\n            onClick: () => changeAmount(drug, amounts[drug] - 1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AmountInput, {\n            type: \"number\",\n            min: \"1\",\n            value: amounts[drug],\n            onChange: e => changeAmount(drug, parseInt(e.target.value) || 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AmountButton, {\n            onClick: () => changeAmount(drug, amounts[drug] + 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            action: \"buy\",\n            onClick: () => buyDrug(drug, amounts[drug]),\n            disabled: money < price * amounts[drug],\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n            action: \"sell\",\n            onClick: () => sellDrug(drug, amounts[drug]),\n            disabled: !inventory[drug] || inventory[drug] < amounts[drug],\n            children: \"Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this)]\n      }, drug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ToolGrid, {\n      children: tools.map(tool => /*#__PURE__*/_jsxDEV(ToolCard, {\n        children: [/*#__PURE__*/_jsxDEV(ToolName, {\n          children: tool.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ToolDescription, {\n          children: tool.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ToolPrice, {\n          children: [\"$\", tool.price.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ToolButton, {\n          onClick: tool.action,\n          disabled: money < tool.price,\n          children: \"Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this)]\n      }, tool.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n_s(DrugMarket, \"oyLSLBa7wOTHneR1XG2AtPXLGOM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c20 = DrugMarket;\nexport default DrugMarket;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"MarketContainer\");\n$RefreshReg$(_c2, \"MarketTitle\");\n$RefreshReg$(_c3, \"TabContainer\");\n$RefreshReg$(_c4, \"Tab\");\n$RefreshReg$(_c5, \"DrugGrid\");\n$RefreshReg$(_c6, \"ToolGrid\");\n$RefreshReg$(_c7, \"ToolCard\");\n$RefreshReg$(_c8, \"ToolName\");\n$RefreshReg$(_c9, \"ToolDescription\");\n$RefreshReg$(_c10, \"ToolPrice\");\n$RefreshReg$(_c11, \"ToolButton\");\n$RefreshReg$(_c12, \"DrugCard\");\n$RefreshReg$(_c13, \"DrugName\");\n$RefreshReg$(_c14, \"DrugPrice\");\n$RefreshReg$(_c15, \"ButtonGroup\");\n$RefreshReg$(_c16, \"ActionButton\");\n$RefreshReg$(_c17, \"AmountControl\");\n$RefreshReg$(_c18, \"AmountButton\");\n$RefreshReg$(_c19, \"AmountInput\");\n$RefreshReg$(_c20, \"DrugMarket\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","styled","updateMoney","updateInventory","updateBTC","addMessage","updateQuestProgress","jsxDEV","_jsxDEV","MarketContainer","div","_c","MarketTitle","h3","_c2","TabContainer","_c3","Tab","button","props","active","_c4","DrugGrid","_c5","ToolGrid","_c6","ToolCard","_c7","ToolName","_c8","ToolDescription","_c9","ToolPrice","_c10","ToolButton","_c11","DrugCard","_c12","DrugName","_c13","DrugPrice","color","_c14","ButtonGroup","_c15","ActionButton","action","_c16","AmountControl","_c17","AmountButton","_c18","AmountInput","input","_c19","DrugMarket","_s","dispatch","money","inventory","currentLocation","btc","state","player","prices","game","quests","activeQuestIds","activeTab","setActiveTab","amounts","setAmounts","weed","cocaine","heroin","meth","ecstasy","formatDrugName","drug","charAt","toUpperCase","slice","locationPrices","changeAmount","value","prev","Math","max","buyDrug","amount","price","cost","toLocaleString","forEach","questId","quest","requirement","type","location","newProgress","progress","completed","reward","reputation","payload","levelUp","title","sellDrug","profit","tools","id","name","description","btcPerDay","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","min","onChange","e","parseInt","target","disabled","tool","_c20","$RefreshReg$"],"sources":["D:/GitHome/dwarzz/src/components/DrugMarket.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { updateMoney, updateInventory, updateBTC } from '../store/playerSlice';\r\nimport { addMessage } from '../store/gameSlice';\r\nimport { updateQuestProgress } from '../store/questSlice';\r\n\r\nconst MarketContainer = styled.div`\r\n  background: rgba(20, 20, 20, 0.75);\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst MarketTitle = styled.h3`\r\n  color: var(--color-primary);\r\n  margin-bottom: 0.8rem;\r\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\r\n  padding-bottom: 0.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  background: ${props => props.active ? 'var(--color-primary)' : 'rgba(30, 30, 30, 0.75)'};\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  color: ${props => props.active ? 'white' : 'rgba(255, 255, 255, 0.7)'};\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.active ? 'var(--color-primary)' : 'rgba(40, 40, 40, 0.75)'};\r\n  }\r\n`;\r\n\r\nconst DrugGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));\r\n  gap: 1rem;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n  padding-right: 5px;\r\n  min-height: 0;\r\n`;\r\n\r\nconst ToolGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n  padding-right: 5px;\r\n  min-height: 0;\r\n`;\r\n\r\nconst ToolCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.75);\r\n  border-radius: 6px;\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst ToolName = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.4rem;\r\n  color: white;\r\n`;\r\n\r\nconst ToolDescription = styled.div`\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 0.8rem;\r\n`;\r\n\r\nconst ToolPrice = styled.div`\r\n  font-size: 1.1rem;\r\n  margin-bottom: 0.8rem;\r\n  color: var(--color-success);\r\n`;\r\n\r\nconst ToolButton = styled.button`\r\n  width: 100%;\r\n  background-color: var(--color-primary);\r\n  padding: 0.5rem;\r\n  font-size: 0.9rem;\r\n  \r\n  &:disabled {\r\n    background-color: rgba(50, 50, 50, 0.5);\r\n  }\r\n`;\r\n\r\nconst DrugCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.75);\r\n  border-radius: 6px;\r\n  padding: 0.8rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst DrugName = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.4rem;\r\n  color: white;\r\n`;\r\n\r\nconst DrugPrice = styled.div`\r\n  font-size: 1.1rem;\r\n  margin-bottom: 0.4rem;\r\n  color: ${props => props.color || 'white'};\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  flex: 1;\r\n  background-color: ${props => props.action === 'buy' ? 'var(--color-success)' : 'var(--color-danger)'};\r\n  padding: 0.5rem;\r\n  font-size: 0.9rem;\r\n  \r\n  &:disabled {\r\n    background-color: rgba(50, 50, 50, 0.5);\r\n  }\r\n`;\r\n\r\nconst AmountControl = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst AmountButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(50, 50, 50, 0.8);\r\n`;\r\n\r\nconst AmountInput = styled.input`\r\n  width: 50px;\r\n  padding: 0.3rem;\r\n  text-align: center;\r\n  background-color: rgba(30, 30, 30, 0.8);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n  margin: 0 0.3rem;\r\n`;\r\n\r\nconst DrugMarket = () => {\r\n  const dispatch = useDispatch();\r\n  const { money = 0, inventory = {}, currentLocation = 'manhattan', btc = 0 } = useSelector(state => state.player);\r\n  const { prices = {} } = useSelector(state => state.game);\r\n  const { quests = {}, activeQuestIds = [] } = useSelector(state => state.quests);\r\n  \r\n  const [activeTab, setActiveTab] = useState('drugs');\r\n  const [amounts, setAmounts] = useState({\r\n    weed: 1,\r\n    cocaine: 1,\r\n    heroin: 1,\r\n    meth: 1,\r\n    ecstasy: 1\r\n  });\r\n  \r\n  // Format drug name for display\r\n  const formatDrugName = (drug) => {\r\n    return drug.charAt(0).toUpperCase() + drug.slice(1);\r\n  };\r\n  \r\n  // Location prices with fallback\r\n  const locationPrices = prices[currentLocation] || {\r\n    weed: 50,\r\n    cocaine: 200,\r\n    heroin: 300,\r\n    meth: 120,\r\n    ecstasy: 80\r\n  };\r\n  \r\n  // Change amount for drug\r\n  const changeAmount = (drug, value) => {\r\n    setAmounts(prev => ({\r\n      ...prev,\r\n      [drug]: Math.max(1, value)\r\n    }));\r\n  };\r\n  \r\n  // Buy drugs\r\n  const buyDrug = (drug, amount) => {\r\n    const price = locationPrices[drug];\r\n    if (!price) {\r\n      dispatch(addMessage(`Error: No price available for ${drug}.`));\r\n      return;\r\n    }\r\n    \r\n    const cost = price * amount;\r\n    \r\n    if (money < cost) {\r\n      dispatch(addMessage(`You don't have enough money to buy ${amount} ${drug}.`));\r\n      return;\r\n    }\r\n    \r\n    // Update money and inventory\r\n    dispatch(updateMoney(-cost));\r\n    dispatch(updateInventory({ drug, amount }));\r\n    dispatch(addMessage(`Bought ${amount} ${drug} for $${cost.toLocaleString()}.`));\r\n    \r\n    // Check for active quests related to buying this drug\r\n    activeQuestIds.forEach(questId => {\r\n      const quest = quests[questId];\r\n      if (!quest) return;\r\n      \r\n      if (\r\n        quest.requirement.type === 'purchase' && \r\n        (quest.requirement.drug === drug || quest.requirement.drug === 'any') &&\r\n        (quest.requirement.location === currentLocation || quest.requirement.location === 'any')\r\n      ) {\r\n        // Update quest progress\r\n        const newProgress = quest.progress + amount;\r\n        dispatch(updateQuestProgress({ \r\n          questId, \r\n          progress: newProgress \r\n        }));\r\n        \r\n        // Check if completed\r\n        if (newProgress >= quest.requirement.amount && !quest.completed) {\r\n          // Apply rewards\r\n          if (quest.reward.money) {\r\n            dispatch(updateMoney(quest.reward.money));\r\n          }\r\n          if (quest.reward.reputation) {\r\n            dispatch({ type: 'player/updateReputation', payload: quest.reward.reputation });\r\n          }\r\n          if (quest.reward.levelUp) {\r\n            dispatch({ type: 'player/levelUp' });\r\n          }\r\n          \r\n          dispatch(addMessage(\r\n            `Quest Completed: ${quest.title}! You earned $${quest.reward.money} and leveled up.`\r\n          ));\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  // Sell drugs\r\n  const sellDrug = (drug, amount) => {\r\n    if (!inventory[drug] || inventory[drug] < amount) {\r\n      dispatch(addMessage(`You don't have enough ${drug} to sell.`));\r\n      return;\r\n    }\r\n    \r\n    const price = locationPrices[drug];\r\n    if (!price) {\r\n      dispatch(addMessage(`Error: No price available for ${drug}.`));\r\n      return;\r\n    }\r\n    \r\n    const profit = price * amount;\r\n    \r\n    // Update money and inventory\r\n    dispatch(updateMoney(profit));\r\n    dispatch(updateInventory({ drug, amount: -amount }));\r\n    dispatch(addMessage(`Sold ${amount} ${drug} for $${profit.toLocaleString()}.`));\r\n    \r\n    // Check for active quests related to selling this drug\r\n    activeQuestIds.forEach(questId => {\r\n      const quest = quests[questId];\r\n      if (!quest) return;\r\n      \r\n      if (\r\n        quest.requirement.type === 'sell' && \r\n        (quest.requirement.drug === drug || quest.requirement.drug === 'any') &&\r\n        (quest.requirement.location === currentLocation || quest.requirement.location === 'any')\r\n      ) {\r\n        // Update quest progress\r\n        const newProgress = quest.progress + amount;\r\n        dispatch(updateQuestProgress({ \r\n          questId, \r\n          progress: newProgress \r\n        }));\r\n        \r\n        // Check if completed\r\n        if (newProgress >= quest.requirement.amount && !quest.completed) {\r\n          // Apply rewards\r\n          if (quest.reward.money) {\r\n            dispatch(updateMoney(quest.reward.money));\r\n          }\r\n          if (quest.reward.reputation) {\r\n            dispatch({ type: 'player/updateReputation', payload: quest.reward.reputation });\r\n          }\r\n          if (quest.reward.levelUp) {\r\n            dispatch({ type: 'player/levelUp' });\r\n          }\r\n          \r\n          dispatch(addMessage(\r\n            `Quest Completed: ${quest.title}! You earned $${quest.reward.money} and leveled up.`\r\n          ));\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  // Tool functions\r\n  const tools = [\r\n    {\r\n      id: 'miningRig',\r\n      name: 'Basic Mining Rig',\r\n      description: 'Set up a basic Bitcoin mining operation',\r\n      price: 5000,\r\n      btcPerDay: 0.01,\r\n      action: () => {\r\n        if (money < 5000) {\r\n          dispatch(addMessage(\"You don't have enough money to buy a mining rig.\"));\r\n          return;\r\n        }\r\n        dispatch(updateMoney(-5000));\r\n        dispatch(updateBTC(0.01));\r\n        dispatch(addMessage(\"You've set up a basic mining rig. Generating 0.01 BTC per day.\"));\r\n      }\r\n    },\r\n    {\r\n      id: 'advancedRig',\r\n      name: 'Advanced Mining Rig',\r\n      description: 'Upgrade to a more powerful mining setup',\r\n      price: 15000,\r\n      btcPerDay: 0.05,\r\n      action: () => {\r\n        if (money < 15000) {\r\n          dispatch(addMessage(\"You don't have enough money to buy an advanced mining rig.\"));\r\n          return;\r\n        }\r\n        dispatch(updateMoney(-15000));\r\n        dispatch(updateBTC(0.05));\r\n        dispatch(addMessage(\"You've upgraded to an advanced mining rig. Generating 0.05 BTC per day.\"));\r\n      }\r\n    },\r\n    {\r\n      id: 'cryptoWallet',\r\n      name: 'Secure Crypto Wallet',\r\n      description: 'Store your Bitcoin safely',\r\n      price: 1000,\r\n      action: () => {\r\n        if (money < 1000) {\r\n          dispatch(addMessage(\"You don't have enough money to buy a secure wallet.\"));\r\n          return;\r\n        }\r\n        dispatch(updateMoney(-1000));\r\n        dispatch(addMessage(\"You've purchased a secure crypto wallet.\"));\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <MarketContainer>\r\n      <MarketTitle>\r\n        {activeTab === 'drugs' ? 'Drug Market' : 'Tools'}\r\n        <span>Cash: ${money.toLocaleString()}</span>\r\n      </MarketTitle>\r\n      \r\n      <TabContainer>\r\n        <Tab \r\n          active={activeTab === 'drugs'} \r\n          onClick={() => setActiveTab('drugs')}\r\n        >\r\n          Drugs\r\n        </Tab>\r\n        <Tab \r\n          active={activeTab === 'tools'} \r\n          onClick={() => setActiveTab('tools')}\r\n        >\r\n          Tools\r\n        </Tab>\r\n      </TabContainer>\r\n      \r\n      {activeTab === 'drugs' ? (\r\n        <DrugGrid>\r\n          {Object.entries(locationPrices).map(([drug, price]) => (\r\n            <DrugCard key={drug}>\r\n              <DrugName>{formatDrugName(drug)}</DrugName>\r\n              <DrugPrice color=\"var(--color-success)\">${price.toLocaleString()}</DrugPrice>\r\n              <div>In stock: {inventory[drug] || 0}</div>\r\n              \r\n              <AmountControl>\r\n                <AmountButton onClick={() => changeAmount(drug, amounts[drug] - 1)}>-</AmountButton>\r\n                <AmountInput \r\n                  type=\"number\" \r\n                  min=\"1\" \r\n                  value={amounts[drug]} \r\n                  onChange={(e) => changeAmount(drug, parseInt(e.target.value) || 1)}\r\n                />\r\n                <AmountButton onClick={() => changeAmount(drug, amounts[drug] + 1)}>+</AmountButton>\r\n              </AmountControl>\r\n              \r\n              <ButtonGroup>\r\n                <ActionButton \r\n                  action=\"buy\"\r\n                  onClick={() => buyDrug(drug, amounts[drug])}\r\n                  disabled={money < price * amounts[drug]}\r\n                >\r\n                  Buy\r\n                </ActionButton>\r\n                <ActionButton \r\n                  action=\"sell\"\r\n                  onClick={() => sellDrug(drug, amounts[drug])}\r\n                  disabled={!inventory[drug] || inventory[drug] < amounts[drug]}\r\n                >\r\n                  Sell\r\n                </ActionButton>\r\n              </ButtonGroup>\r\n            </DrugCard>\r\n          ))}\r\n        </DrugGrid>\r\n      ) : (\r\n        <ToolGrid>\r\n          {tools.map(tool => (\r\n            <ToolCard key={tool.id}>\r\n              <ToolName>{tool.name}</ToolName>\r\n              <ToolDescription>{tool.description}</ToolDescription>\r\n              <ToolPrice>${tool.price.toLocaleString()}</ToolPrice>\r\n              <ToolButton\r\n                onClick={tool.action}\r\n                disabled={money < tool.price}\r\n              >\r\n                Purchase\r\n              </ToolButton>\r\n            </ToolCard>\r\n          ))}\r\n        </ToolGrid>\r\n      )}\r\n    </MarketContainer>\r\n  );\r\n};\r\n\r\nexport default DrugMarket; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}