{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestContainer=styled.div`\n  background: rgba(20, 20, 20, 0.75);\n  border-radius: 8px;\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  flex: 1;\n  overflow-y: auto;\n  min-height: 0;\n  max-height: calc(100% - 400px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n`;const QuestTitle=styled.h3`\n  color: var(--color-primary);\n  margin-bottom: 0.5rem;\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\n  padding-bottom: 0.5rem;\n  font-size: 1.1rem;\n`;const QuestItem=styled.div`\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  border-left: 3px solid var(--color-secondary);\n`;const QuestHeader=styled.div`\n  font-weight: bold;\n  font-size: 1.1rem;\n  margin-bottom: 0.3rem;\n  color: var(--color-secondary);\n`;const QuestDescription=styled.div`\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n  color: rgba(255, 255, 255, 0.8);\n`;const QuestProgress=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;const ProgressBar=styled.div`\n  flex: 1;\n  height: 6px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 3px;\n  overflow: hidden;\n`;const ProgressFill=styled.div`\n  height: 100%;\n  width: ${props=>props.progress/props.max*100}%;\n  background: var(--color-secondary);\n`;const ProgressText=styled.span`\n  font-size: 0.8rem;\n  color: rgba(255, 255, 255, 0.7);\n`;const NoQuestsMessage=styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: rgba(255, 255, 255, 0.5);\n  font-style: italic;\n`;const QuestLog=()=>{const{quests,activeQuestIds}=useSelector(state=>state.quests);// Get active quests from IDs\nconst activeQuests=activeQuestIds.map(id=>quests[id]).filter(Boolean);return/*#__PURE__*/_jsxs(QuestContainer,{children:[/*#__PURE__*/_jsx(QuestTitle,{children:\"Active Quests\"}),activeQuests.length===0?/*#__PURE__*/_jsx(NoQuestsMessage,{children:\"No active quests available.\"}):activeQuests.map(quest=>/*#__PURE__*/_jsxs(QuestItem,{children:[/*#__PURE__*/_jsx(QuestHeader,{children:quest.title}),/*#__PURE__*/_jsx(QuestDescription,{children:quest.description}),/*#__PURE__*/_jsxs(QuestProgress,{children:[/*#__PURE__*/_jsx(ProgressBar,{children:/*#__PURE__*/_jsx(ProgressFill,{progress:quest.progress,max:quest.requirement.amount})}),/*#__PURE__*/_jsxs(ProgressText,{children:[quest.progress,\"/\",quest.requirement.amount]})]})]},quest.id))]});};export default QuestLog;","map":{"version":3,"names":["React","useSelector","styled","jsx","_jsx","jsxs","_jsxs","QuestContainer","div","QuestTitle","h3","QuestItem","QuestHeader","QuestDescription","QuestProgress","ProgressBar","ProgressFill","props","progress","max","ProgressText","span","NoQuestsMessage","QuestLog","quests","activeQuestIds","state","activeQuests","map","id","filter","Boolean","children","length","quest","title","description","requirement","amount"],"sources":["D:/GitHome/dwarzz/src/components/QuestLog.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst QuestContainer = styled.div`\r\n  background: rgba(20, 20, 20, 0.75);\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  min-height: 0;\r\n  max-height: calc(100% - 400px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst QuestTitle = styled.h3`\r\n  color: var(--color-primary);\r\n  margin-bottom: 0.5rem;\r\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\r\n  padding-bottom: 0.5rem;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst QuestItem = styled.div`\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  border-left: 3px solid var(--color-secondary);\r\n`;\r\n\r\nconst QuestHeader = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 0.3rem;\r\n  color: var(--color-secondary);\r\n`;\r\n\r\nconst QuestDescription = styled.div`\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nconst QuestProgress = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  flex: 1;\r\n  height: 6px;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressFill = styled.div`\r\n  height: 100%;\r\n  width: ${props => (props.progress / props.max) * 100}%;\r\n  background: var(--color-secondary);\r\n`;\r\n\r\nconst ProgressText = styled.span`\r\n  font-size: 0.8rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\nconst NoQuestsMessage = styled.div`\r\n  text-align: center;\r\n  padding: 1rem;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  font-style: italic;\r\n`;\r\n\r\nconst QuestLog = () => {\r\n  const { quests, activeQuestIds } = useSelector(state => state.quests);\r\n  \r\n  // Get active quests from IDs\r\n  const activeQuests = activeQuestIds.map(id => quests[id]).filter(Boolean);\r\n  \r\n  return (\r\n    <QuestContainer>\r\n      <QuestTitle>Active Quests</QuestTitle>\r\n      \r\n      {activeQuests.length === 0 ? (\r\n        <NoQuestsMessage>No active quests available.</NoQuestsMessage>\r\n      ) : (\r\n        activeQuests.map(quest => (\r\n          <QuestItem key={quest.id}>\r\n            <QuestHeader>{quest.title}</QuestHeader>\r\n            <QuestDescription>{quest.description}</QuestDescription>\r\n            <QuestProgress>\r\n              <ProgressBar>\r\n                <ProgressFill \r\n                  progress={quest.progress} \r\n                  max={quest.requirement.amount} \r\n                />\r\n              </ProgressBar>\r\n              <ProgressText>\r\n                {quest.progress}/{quest.requirement.amount}\r\n              </ProgressText>\r\n            </QuestProgress>\r\n          </QuestItem>\r\n        ))\r\n      )}\r\n    </QuestContainer>\r\n  );\r\n};\r\n\r\nexport default QuestLog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}