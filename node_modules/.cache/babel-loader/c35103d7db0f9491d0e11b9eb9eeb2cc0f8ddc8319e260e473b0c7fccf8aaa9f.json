{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import styled from'styled-components';import{updateLocation}from'../store/playerSlice';import{addMessage,nextDay}from'../store/gameSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MapContainer=styled.div`\n  background: rgba(20, 20, 20, 0.8);\n  border-radius: 8px;\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  height: auto;\n  min-height: 210px;\n`;const MapTitle=styled.h3`\n  color: var(--color-primary);\n  margin-bottom: 0.8rem;\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\n  padding-bottom: 0.5rem;\n  font-size: 1.1rem;\n`;const LocationsGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: 1rem;\n`;const LocationButton=styled.button`\n  background-color: ${props=>props.active?'var(--color-primary)':'rgba(30, 30, 30, 0.8)'};\n  color: ${props=>props.active?'white':'rgba(255, 255, 255, 0.7)'};\n  border: 1px solid ${props=>props.active?'var(--color-primary)':'rgba(255, 255, 255, 0.2)'};\n  padding: 0.75rem;\n  border-radius: 6px;\n  transition: all 0.3s ease;\n  height: 75px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover:not(:disabled) {\n    border-color: var(--color-primary);\n    transform: translateY(-2px);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;const LocationName=styled.div`\n  font-weight: bold;\n  margin-bottom: 0.3rem;\n  font-size: 1rem;\n`;const LocationInfo=styled.div`\n  font-size: 0.85rem;\n  color: rgba(255, 255, 255, 0.6);\n`;const TravelActions=styled.div`\n  margin-top: 0.8rem;\n  display: flex;\n  justify-content: flex-end;\n`;const LocationMap=()=>{const dispatch=useDispatch();const{currentLocation}=useSelector(state=>state.player);const{locations}=useSelector(state=>state.game);// Format location name for display\nconst formatLocation=location=>{return location.charAt(0).toUpperCase()+location.slice(1).replace(/([A-Z])/g,' $1');};// Location descriptions\nconst locationInfo={manhattan:\"High prices, low risk\",brooklyn:\"Medium prices, medium risk\",queens:\"Medium prices, medium risk\",bronx:\"Low prices, high risk\",statenIsland:\"High prices, low risk\"};// Handle travel to new location\nconst handleTravel=location=>{if(location===currentLocation)return;dispatch(updateLocation(location));dispatch(nextDay());dispatch(addMessage(`You traveled to ${formatLocation(location)}. A new day begins.`));};return/*#__PURE__*/_jsxs(MapContainer,{children:[/*#__PURE__*/_jsx(MapTitle,{children:\"New York City Map\"}),/*#__PURE__*/_jsx(LocationsGrid,{children:locations.map(location=>/*#__PURE__*/_jsxs(LocationButton,{active:location===currentLocation,onClick:()=>handleTravel(location),disabled:location===currentLocation,children:[/*#__PURE__*/_jsx(LocationName,{children:formatLocation(location)}),/*#__PURE__*/_jsx(LocationInfo,{children:locationInfo[location]})]},location))}),/*#__PURE__*/_jsx(TravelActions,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"small\",{children:\"Travel takes 1 day and prices will change.\"})})})]});};export default LocationMap;","map":{"version":3,"names":["React","useDispatch","useSelector","styled","updateLocation","addMessage","nextDay","jsx","_jsx","jsxs","_jsxs","MapContainer","div","MapTitle","h3","LocationsGrid","LocationButton","button","props","active","LocationName","LocationInfo","TravelActions","LocationMap","dispatch","currentLocation","state","player","locations","game","formatLocation","location","charAt","toUpperCase","slice","replace","locationInfo","manhattan","brooklyn","queens","bronx","statenIsland","handleTravel","children","map","onClick","disabled"],"sources":["D:/GitHome/dwarzz/src/components/LocationMap.js"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { updateLocation } from '../store/playerSlice';\r\nimport { addMessage, nextDay } from '../store/gameSlice';\r\n\r\nconst MapContainer = styled.div`\r\n  background: rgba(20, 20, 20, 0.8);\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  height: auto;\r\n  min-height: 210px;\r\n`;\r\n\r\nconst MapTitle = styled.h3`\r\n  color: var(--color-primary);\r\n  margin-bottom: 0.8rem;\r\n  border-bottom: 1px solid rgba(255, 77, 0, 0.3);\r\n  padding-bottom: 0.5rem;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst LocationsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\r\n  gap: 1rem;\r\n`;\r\n\r\nconst LocationButton = styled.button`\r\n  background-color: ${props => props.active ? 'var(--color-primary)' : 'rgba(30, 30, 30, 0.8)'};\r\n  color: ${props => props.active ? 'white' : 'rgba(255, 255, 255, 0.7)'};\r\n  border: 1px solid ${props => props.active ? 'var(--color-primary)' : 'rgba(255, 255, 255, 0.2)'};\r\n  padding: 0.75rem;\r\n  border-radius: 6px;\r\n  transition: all 0.3s ease;\r\n  height: 75px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover:not(:disabled) {\r\n    border-color: var(--color-primary);\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst LocationName = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 0.3rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst LocationInfo = styled.div`\r\n  font-size: 0.85rem;\r\n  color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nconst TravelActions = styled.div`\r\n  margin-top: 0.8rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst LocationMap = () => {\r\n  const dispatch = useDispatch();\r\n  const { currentLocation } = useSelector(state => state.player);\r\n  const { locations } = useSelector(state => state.game);\r\n  \r\n  // Format location name for display\r\n  const formatLocation = (location) => {\r\n    return location.charAt(0).toUpperCase() + location.slice(1).replace(/([A-Z])/g, ' $1');\r\n  };\r\n  \r\n  // Location descriptions\r\n  const locationInfo = {\r\n    manhattan: \"High prices, low risk\",\r\n    brooklyn: \"Medium prices, medium risk\",\r\n    queens: \"Medium prices, medium risk\",\r\n    bronx: \"Low prices, high risk\",\r\n    statenIsland: \"High prices, low risk\"\r\n  };\r\n  \r\n  // Handle travel to new location\r\n  const handleTravel = (location) => {\r\n    if (location === currentLocation) return;\r\n    \r\n    dispatch(updateLocation(location));\r\n    dispatch(nextDay());\r\n    dispatch(addMessage(`You traveled to ${formatLocation(location)}. A new day begins.`));\r\n  };\r\n  \r\n  return (\r\n    <MapContainer>\r\n      <MapTitle>New York City Map</MapTitle>\r\n      \r\n      <LocationsGrid>\r\n        {locations.map(location => (\r\n          <LocationButton\r\n            key={location}\r\n            active={location === currentLocation}\r\n            onClick={() => handleTravel(location)}\r\n            disabled={location === currentLocation}\r\n          >\r\n            <LocationName>{formatLocation(location)}</LocationName>\r\n            <LocationInfo>{locationInfo[location]}</LocationInfo>\r\n          </LocationButton>\r\n        ))}\r\n      </LocationsGrid>\r\n      \r\n      <TravelActions>\r\n        <div>\r\n          <small>Travel takes 1 day and prices will change.</small>\r\n        </div>\r\n      </TravelActions>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default LocationMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}