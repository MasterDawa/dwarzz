{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHome\\\\dwarzz\\\\src\\\\components\\\\GameContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport PlayerStats from './PlayerStats';\nimport LocationMap from './LocationMap';\nimport DrugMarket from './DrugMarket';\nimport QuestLog from './QuestLog';\nimport GameLog from './GameLog';\n\n// Utils\nimport { autoSaveGame } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: auto 1fr auto;\n  gap: 1rem;\n  height: calc(100vh - 150px);\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = GameGrid;\nconst LeftColumn = styled.div`\n  grid-column: 1;\n  grid-row: 1 / span 3;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c2 = LeftColumn;\nconst MainContent = styled.div`\n  grid-column: 2;\n  grid-row: 1 / span 2;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c3 = MainContent;\nconst BottomRow = styled.div`\n  grid-column: 2;\n  grid-row: 3;\n  margin-top: 1rem;\n`;\n_c4 = BottomRow;\nconst GameContainer = () => {\n  _s();\n  const dispatch = useDispatch();\n  const gameState = useSelector(state => state);\n\n  // Auto-save on any state change\n  useEffect(() => {\n    const saveTimer = setTimeout(() => {\n      autoSaveGame(gameState);\n    }, 1000);\n    return () => clearTimeout(saveTimer);\n  }, [gameState]);\n  return /*#__PURE__*/_jsxDEV(GameGrid, {\n    children: [/*#__PURE__*/_jsxDEV(LeftColumn, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestLog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(LocationMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrugMarket, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomRow, {\n      children: /*#__PURE__*/_jsxDEV(GameLog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(GameContainer, \"i1uH8FnuNPTJtr7/vp43AmTUyTs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c5 = GameContainer;\nexport default GameContainer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GameGrid\");\n$RefreshReg$(_c2, \"LeftColumn\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"BottomRow\");\n$RefreshReg$(_c5, \"GameContainer\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","styled","PlayerStats","LocationMap","DrugMarket","QuestLog","GameLog","autoSaveGame","jsxDEV","_jsxDEV","GameGrid","div","_c","LeftColumn","_c2","MainContent","_c3","BottomRow","_c4","GameContainer","_s","dispatch","gameState","state","saveTimer","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["D:/GitHome/dwarzz/src/components/GameContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\n// Components\r\nimport PlayerStats from './PlayerStats';\r\nimport LocationMap from './LocationMap';\r\nimport DrugMarket from './DrugMarket';\r\nimport QuestLog from './QuestLog';\r\nimport GameLog from './GameLog';\r\n\r\n// Utils\r\nimport { autoSaveGame } from '../utils/localStorage';\r\n\r\nconst GameGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-rows: auto 1fr auto;\r\n  gap: 1rem;\r\n  height: calc(100vh - 150px);\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  grid-column: 1;\r\n  grid-row: 1 / span 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 1 / span 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 3;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GameContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const gameState = useSelector(state => state);\r\n  \r\n  // Auto-save on any state change\r\n  useEffect(() => {\r\n    const saveTimer = setTimeout(() => {\r\n      autoSaveGame(gameState);\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(saveTimer);\r\n  }, [gameState]);\r\n  \r\n  return (\r\n    <GameGrid>\r\n      <LeftColumn>\r\n        <PlayerStats />\r\n        <QuestLog />\r\n      </LeftColumn>\r\n      \r\n      <MainContent>\r\n        <LocationMap />\r\n        <DrugMarket />\r\n      </MainContent>\r\n      \r\n      <BottomRow>\r\n        <GameLog />\r\n      </BottomRow>\r\n    </GameGrid>\r\n  );\r\n};\r\n\r\nexport default GameContainer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}