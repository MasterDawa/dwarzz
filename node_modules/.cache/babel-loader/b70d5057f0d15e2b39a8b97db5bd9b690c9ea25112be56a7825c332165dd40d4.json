{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import styled from'styled-components';// Components\nimport PlayerStats from'./PlayerStats';import LocationMap from'./LocationMap';import DrugMarket from'./DrugMarket';import QuestLog from'./QuestLog';import GameLog from'./GameLog';// Utils\nimport{autoSaveGame}from'../utils/localStorage';import{resetGame}from'../store/gameSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameWrapper=styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 80px);\n  width: 100%;\n`;const GameGrid=styled.div`\n  display: grid;\n  grid-template-columns: 320px 1fr;\n  grid-template-rows: auto 1fr auto;\n  gap: 1.2rem;\n  flex: 1;\n  width: 100%;\n  margin: 0 auto;\n  overflow: hidden;\n`;const LeftColumn=styled.div`\n  grid-column: 1;\n  grid-row: 1 / span 3;\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n  max-height: 100%;\n  overflow: hidden;\n`;const MainContent=styled.div`\n  grid-column: 2;\n  grid-row: 1 / span 2;\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n  overflow: hidden;\n  max-height: calc(100% - 180px);\n`;const MapSection=styled.div`\n  flex-shrink: 0;\n  margin-bottom: 1.2rem;\n`;const MarketSection=styled.div`\n  flex: 1;\n  overflow: hidden;\n  min-height: 0;\n  margin-top: 0.5rem;\n`;const BottomRow=styled.div`\n  grid-column: 2;\n  grid-row: 3;\n  margin-top: auto;\n  height: 160px;\n`;const HeaderRow=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.2rem;\n  padding: 0 0.5rem;\n`;const GameTitle=styled.h2`\n  color: var(--color-primary);\n  margin: 0;\n  font-size: 1.8rem;\n`;const BackButton=styled.button`\n  background-color: var(--color-secondary);\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;const GameContainer=()=>{const dispatch=useDispatch();const gameState=useSelector(state=>state);// Auto-save on any state change\nuseEffect(()=>{const saveTimer=setTimeout(()=>{autoSaveGame(gameState);},1000);return()=>clearTimeout(saveTimer);},[gameState]);const handleBackToMain=()=>{// Auto-save before going back to ensure game state is saved\nautoSaveGame(gameState);dispatch(resetGame());};return/*#__PURE__*/_jsxs(GameWrapper,{children:[/*#__PURE__*/_jsxs(HeaderRow,{children:[/*#__PURE__*/_jsx(GameTitle,{children:\"Hustle City\"}),/*#__PURE__*/_jsx(BackButton,{onClick:handleBackToMain,children:\"\\u2190 Back to Main Menu\"})]}),/*#__PURE__*/_jsxs(GameGrid,{children:[/*#__PURE__*/_jsxs(LeftColumn,{children:[/*#__PURE__*/_jsx(PlayerStats,{}),/*#__PURE__*/_jsx(QuestLog,{})]}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsx(MapSection,{children:/*#__PURE__*/_jsx(LocationMap,{})}),/*#__PURE__*/_jsx(MarketSection,{children:/*#__PURE__*/_jsx(DrugMarket,{})})]}),/*#__PURE__*/_jsx(BottomRow,{children:/*#__PURE__*/_jsx(GameLog,{})})]})]});};export default GameContainer;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","styled","PlayerStats","LocationMap","DrugMarket","QuestLog","GameLog","autoSaveGame","resetGame","jsx","_jsx","jsxs","_jsxs","GameWrapper","div","GameGrid","LeftColumn","MainContent","MapSection","MarketSection","BottomRow","HeaderRow","GameTitle","h2","BackButton","button","GameContainer","dispatch","gameState","state","saveTimer","setTimeout","clearTimeout","handleBackToMain","children","onClick"],"sources":["D:/GitHome/dwarzz/src/components/GameContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\n// Components\r\nimport PlayerStats from './PlayerStats';\r\nimport LocationMap from './LocationMap';\r\nimport DrugMarket from './DrugMarket';\r\nimport QuestLog from './QuestLog';\r\nimport GameLog from './GameLog';\r\n\r\n// Utils\r\nimport { autoSaveGame } from '../utils/localStorage';\r\nimport { resetGame } from '../store/gameSlice';\r\n\r\nconst GameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 80px);\r\n  width: 100%;\r\n`;\r\n\r\nconst GameGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 320px 1fr;\r\n  grid-template-rows: auto 1fr auto;\r\n  gap: 1.2rem;\r\n  flex: 1;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  grid-column: 1;\r\n  grid-row: 1 / span 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.2rem;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 1 / span 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.2rem;\r\n  overflow: hidden;\r\n  max-height: calc(100% - 180px);\r\n`;\r\n\r\nconst MapSection = styled.div`\r\n  flex-shrink: 0;\r\n  margin-bottom: 1.2rem;\r\n`;\r\n\r\nconst MarketSection = styled.div`\r\n  flex: 1;\r\n  overflow: hidden;\r\n  min-height: 0;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 3;\r\n  margin-top: auto;\r\n  height: 160px;\r\n`;\r\n\r\nconst HeaderRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.2rem;\r\n  padding: 0 0.5rem;\r\n`;\r\n\r\nconst GameTitle = styled.h2`\r\n  color: var(--color-primary);\r\n  margin: 0;\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  background-color: var(--color-secondary);\r\n  padding: 0.5rem 1rem;\r\n  font-size: 0.9rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst GameContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const gameState = useSelector(state => state);\r\n  \r\n  // Auto-save on any state change\r\n  useEffect(() => {\r\n    const saveTimer = setTimeout(() => {\r\n      autoSaveGame(gameState);\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(saveTimer);\r\n  }, [gameState]);\r\n  \r\n  const handleBackToMain = () => {\r\n    // Auto-save before going back to ensure game state is saved\r\n    autoSaveGame(gameState);\r\n    dispatch(resetGame());\r\n  };\r\n  \r\n  return (\r\n    <GameWrapper>\r\n      <HeaderRow>\r\n        <GameTitle>Hustle City</GameTitle>\r\n        <BackButton onClick={handleBackToMain}>\r\n          ‚Üê Back to Main Menu\r\n        </BackButton>\r\n      </HeaderRow>\r\n      \r\n      <GameGrid>\r\n        <LeftColumn>\r\n          <PlayerStats />\r\n          <QuestLog />\r\n        </LeftColumn>\r\n        \r\n        <MainContent>\r\n          <MapSection>\r\n            <LocationMap />\r\n          </MapSection>\r\n          <MarketSection>\r\n            <DrugMarket />\r\n          </MarketSection>\r\n        </MainContent>\r\n        \r\n        <BottomRow>\r\n          <GameLog />\r\n        </BottomRow>\r\n      </GameGrid>\r\n    </GameWrapper>\r\n  );\r\n};\r\n\r\nexport default GameContainer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}