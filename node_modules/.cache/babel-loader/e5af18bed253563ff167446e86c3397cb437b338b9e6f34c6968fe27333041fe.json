{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Initial quests data\nconst questData={smallTimeDealer:{id:'smallTimeDealer',title:'Small Time Dealer',description:'Buy 5 units of weed to start your journey.',requirement:{type:'purchase',drug:'weed',amount:5,location:'any'},reward:{money:100,levelUp:true,reputation:5},progress:0,completed:false,unlocked:true,nextQuests:['expandingTerritory']},expandingTerritory:{id:'expandingTerritory',title:'Expanding Territory',description:'Sell 10 units of weed in Brooklyn.',requirement:{type:'sell',drug:'weed',amount:10,location:'brooklyn'},reward:{money:250,levelUp:true,reputation:10},progress:0,completed:false,unlocked:false,nextQuests:['bigPlayer']},bigPlayer:{id:'bigPlayer',title:'Big Player',description:'Sell 20 units of cocaine in Manhattan.',requirement:{type:'sell',drug:'cocaine',amount:20,location:'manhattan'},reward:{money:1000,levelUp:true,reputation:25},progress:0,completed:false,unlocked:false,nextQuests:['drugOverlord']},drugOverlord:{id:'drugOverlord',title:'Drug Overlord',description:'Accumulate $10,000 in cash.',requirement:{type:'accumulate',resource:'money',amount:10000},reward:{money:5000,levelUp:true,reputation:50},progress:0,completed:false,unlocked:false,nextQuests:[]}};const initialState={quests:questData,activeQuestIds:['smallTimeDealer'],completedQuestIds:[]};export const questSlice=createSlice({name:'quests',initialState,reducers:{updateQuestProgress:(state,action)=>{const{questId,progress}=action.payload;if(state.quests[questId]){state.quests[questId].progress=progress;// Check if quest is completed\nif(progress>=state.quests[questId].requirement.amount&&!state.quests[questId].completed){state.quests[questId].completed=true;state.completedQuestIds.push(questId);// Remove from active quests\nstate.activeQuestIds=state.activeQuestIds.filter(id=>id!==questId);// Unlock next quests\nstate.quests[questId].nextQuests.forEach(nextQuestId=>{if(state.quests[nextQuestId]){state.quests[nextQuestId].unlocked=true;state.activeQuestIds.push(nextQuestId);}});}}},resetQuests:()=>initialState,loadQuestState:(state,action)=>{return{...action.payload};}}});export const{updateQuestProgress,resetQuests,loadQuestState}=questSlice.actions;export default questSlice.reducer;","map":{"version":3,"names":["createSlice","questData","smallTimeDealer","id","title","description","requirement","type","drug","amount","location","reward","money","levelUp","reputation","progress","completed","unlocked","nextQuests","expandingTerritory","bigPlayer","drugOverlord","resource","initialState","quests","activeQuestIds","completedQuestIds","questSlice","name","reducers","updateQuestProgress","state","action","questId","payload","push","filter","forEach","nextQuestId","resetQuests","loadQuestState","actions","reducer"],"sources":["D:/GitHome/dwarzz/src/store/questSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Initial quests data\r\nconst questData = {\r\n  smallTimeDealer: {\r\n    id: 'smallTimeDealer',\r\n    title: 'Small Time Dealer',\r\n    description: 'Buy 5 units of weed to start your journey.',\r\n    requirement: {\r\n      type: 'purchase',\r\n      drug: 'weed',\r\n      amount: 5,\r\n      location: 'any'\r\n    },\r\n    reward: {\r\n      money: 100,\r\n      levelUp: true,\r\n      reputation: 5\r\n    },\r\n    progress: 0,\r\n    completed: false,\r\n    unlocked: true,\r\n    nextQuests: ['expandingTerritory']\r\n  },\r\n  expandingTerritory: {\r\n    id: 'expandingTerritory',\r\n    title: 'Expanding Territory',\r\n    description: 'Sell 10 units of weed in Brooklyn.',\r\n    requirement: {\r\n      type: 'sell',\r\n      drug: 'weed',\r\n      amount: 10,\r\n      location: 'brooklyn'\r\n    },\r\n    reward: {\r\n      money: 250,\r\n      levelUp: true,\r\n      reputation: 10\r\n    },\r\n    progress: 0,\r\n    completed: false,\r\n    unlocked: false,\r\n    nextQuests: ['bigPlayer']\r\n  },\r\n  bigPlayer: {\r\n    id: 'bigPlayer',\r\n    title: 'Big Player',\r\n    description: 'Sell 20 units of cocaine in Manhattan.',\r\n    requirement: {\r\n      type: 'sell',\r\n      drug: 'cocaine',\r\n      amount: 20,\r\n      location: 'manhattan'\r\n    },\r\n    reward: {\r\n      money: 1000,\r\n      levelUp: true,\r\n      reputation: 25\r\n    },\r\n    progress: 0,\r\n    completed: false,\r\n    unlocked: false,\r\n    nextQuests: ['drugOverlord']\r\n  },\r\n  drugOverlord: {\r\n    id: 'drugOverlord',\r\n    title: 'Drug Overlord',\r\n    description: 'Accumulate $10,000 in cash.',\r\n    requirement: {\r\n      type: 'accumulate',\r\n      resource: 'money',\r\n      amount: 10000\r\n    },\r\n    reward: {\r\n      money: 5000,\r\n      levelUp: true,\r\n      reputation: 50\r\n    },\r\n    progress: 0,\r\n    completed: false,\r\n    unlocked: false,\r\n    nextQuests: []\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  quests: questData,\r\n  activeQuestIds: ['smallTimeDealer'],\r\n  completedQuestIds: []\r\n};\r\n\r\nexport const questSlice = createSlice({\r\n  name: 'quests',\r\n  initialState,\r\n  reducers: {\r\n    updateQuestProgress: (state, action) => {\r\n      const { questId, progress } = action.payload;\r\n      \r\n      if (state.quests[questId]) {\r\n        state.quests[questId].progress = progress;\r\n        \r\n        // Check if quest is completed\r\n        if (progress >= state.quests[questId].requirement.amount && !state.quests[questId].completed) {\r\n          state.quests[questId].completed = true;\r\n          state.completedQuestIds.push(questId);\r\n          \r\n          // Remove from active quests\r\n          state.activeQuestIds = state.activeQuestIds.filter(id => id !== questId);\r\n          \r\n          // Unlock next quests\r\n          state.quests[questId].nextQuests.forEach(nextQuestId => {\r\n            if (state.quests[nextQuestId]) {\r\n              state.quests[nextQuestId].unlocked = true;\r\n              state.activeQuestIds.push(nextQuestId);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    resetQuests: () => initialState,\r\n    loadQuestState: (state, action) => {\r\n      return { ...action.payload };\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  updateQuestProgress, \r\n  resetQuests,\r\n  loadQuestState\r\n} = questSlice.actions;\r\n\r\nexport default questSlice.reducer; "],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C;AACA,KAAM,CAAAC,SAAS,CAAG,CAChBC,eAAe,CAAE,CACfC,EAAE,CAAE,iBAAiB,CACrBC,KAAK,CAAE,mBAAmB,CAC1BC,WAAW,CAAE,4CAA4C,CACzDC,WAAW,CAAE,CACXC,IAAI,CAAE,UAAU,CAChBC,IAAI,CAAE,MAAM,CACZC,MAAM,CAAE,CAAC,CACTC,QAAQ,CAAE,KACZ,CAAC,CACDC,MAAM,CAAE,CACNC,KAAK,CAAE,GAAG,CACVC,OAAO,CAAE,IAAI,CACbC,UAAU,CAAE,CACd,CAAC,CACDC,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,CAAC,oBAAoB,CACnC,CAAC,CACDC,kBAAkB,CAAE,CAClBhB,EAAE,CAAE,oBAAoB,CACxBC,KAAK,CAAE,qBAAqB,CAC5BC,WAAW,CAAE,oCAAoC,CACjDC,WAAW,CAAE,CACXC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,MAAM,CACZC,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,UACZ,CAAC,CACDC,MAAM,CAAE,CACNC,KAAK,CAAE,GAAG,CACVC,OAAO,CAAE,IAAI,CACbC,UAAU,CAAE,EACd,CAAC,CACDC,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,KAAK,CACfC,UAAU,CAAE,CAAC,WAAW,CAC1B,CAAC,CACDE,SAAS,CAAE,CACTjB,EAAE,CAAE,WAAW,CACfC,KAAK,CAAE,YAAY,CACnBC,WAAW,CAAE,wCAAwC,CACrDC,WAAW,CAAE,CACXC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,WACZ,CAAC,CACDC,MAAM,CAAE,CACNC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,IAAI,CACbC,UAAU,CAAE,EACd,CAAC,CACDC,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,KAAK,CACfC,UAAU,CAAE,CAAC,cAAc,CAC7B,CAAC,CACDG,YAAY,CAAE,CACZlB,EAAE,CAAE,cAAc,CAClBC,KAAK,CAAE,eAAe,CACtBC,WAAW,CAAE,6BAA6B,CAC1CC,WAAW,CAAE,CACXC,IAAI,CAAE,YAAY,CAClBe,QAAQ,CAAE,OAAO,CACjBb,MAAM,CAAE,KACV,CAAC,CACDE,MAAM,CAAE,CACNC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,IAAI,CACbC,UAAU,CAAE,EACd,CAAC,CACDC,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,KAAK,CACfC,UAAU,CAAE,EACd,CACF,CAAC,CAED,KAAM,CAAAK,YAAY,CAAG,CACnBC,MAAM,CAAEvB,SAAS,CACjBwB,cAAc,CAAE,CAAC,iBAAiB,CAAC,CACnCC,iBAAiB,CAAE,EACrB,CAAC,CAED,MAAO,MAAM,CAAAC,UAAU,CAAG3B,WAAW,CAAC,CACpC4B,IAAI,CAAE,QAAQ,CACdL,YAAY,CACZM,QAAQ,CAAE,CACRC,mBAAmB,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACtC,KAAM,CAAEC,OAAO,CAAElB,QAAS,CAAC,CAAGiB,MAAM,CAACE,OAAO,CAE5C,GAAIH,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAAE,CACzBF,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAAClB,QAAQ,CAAGA,QAAQ,CAEzC;AACA,GAAIA,QAAQ,EAAIgB,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAAC3B,WAAW,CAACG,MAAM,EAAI,CAACsB,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAACjB,SAAS,CAAE,CAC5Fe,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAACjB,SAAS,CAAG,IAAI,CACtCe,KAAK,CAACL,iBAAiB,CAACS,IAAI,CAACF,OAAO,CAAC,CAErC;AACAF,KAAK,CAACN,cAAc,CAAGM,KAAK,CAACN,cAAc,CAACW,MAAM,CAACjC,EAAE,EAAIA,EAAE,GAAK8B,OAAO,CAAC,CAExE;AACAF,KAAK,CAACP,MAAM,CAACS,OAAO,CAAC,CAACf,UAAU,CAACmB,OAAO,CAACC,WAAW,EAAI,CACtD,GAAIP,KAAK,CAACP,MAAM,CAACc,WAAW,CAAC,CAAE,CAC7BP,KAAK,CAACP,MAAM,CAACc,WAAW,CAAC,CAACrB,QAAQ,CAAG,IAAI,CACzCc,KAAK,CAACN,cAAc,CAACU,IAAI,CAACG,WAAW,CAAC,CACxC,CACF,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CACDC,WAAW,CAAEA,CAAA,GAAMhB,YAAY,CAC/BiB,cAAc,CAAEA,CAACT,KAAK,CAAEC,MAAM,GAAK,CACjC,MAAO,CAAE,GAAGA,MAAM,CAACE,OAAQ,CAAC,CAC9B,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXJ,mBAAmB,CACnBS,WAAW,CACXC,cACF,CAAC,CAAGb,UAAU,CAACc,OAAO,CAEtB,cAAe,CAAAd,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}